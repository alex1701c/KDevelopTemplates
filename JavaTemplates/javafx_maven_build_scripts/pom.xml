<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <groupId>org.author.%{APPNAMELC}</groupId>
    <artifactId>%{APPNAMELC}</artifactId>
    <version>1.0</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <!-- General dependencies -->
        <dependency>
            <groupId>com.jfoenix</groupId>
            <artifactId>jfoenix</artifactId>
            <version>9.0.9</version>
            <!-- Java 8 compatible version-->
            <!--<version>8.0.4</version>-->
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>
        <!-- JavaFX Dependencies for jdk 11-->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>jdk-11+26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>13-ea+13</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>13-ea+13</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>13-ea+13</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.15-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>jdk-11+26</version>
            <!-- Java 8 compatible version-->
            <!--<version>4.0.15-alpha</version>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.5.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--Compiler settings-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <!--Run junit tests using maven test command-->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--Issues with later versions-->
                <version>3.0.0-M3</version>
                <configuration>
                    <argLine>-Dheadless=true</argLine>
                </configuration>
            </plugin>
            <!--Execute main using mvn tasks compile, exec:java-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <mainClass>main.Main</mainClass>
                </configuration>
            </plugin>
            <!-- Build deb and rpm using  mvn jfx:native -->
            <plugin>
                <groupId>com.zenjava</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>8.8.3</version>
                <configuration>
                    <vendor>org.author.%{APPNAMELC}</vendor>
                    <mainClass>main.Main</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>main.Launcher</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Requires global JRE -->
            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <deb>${project.build.directory}/${project.artifactId}_${project.version}.deb</deb>
                            <verbose>true</verbose>
                            <snapshotExpand>true</snapshotExpand>
                            <!-- expand "SNAPSHOT" to what is in the "USER" env variable -->
                            <snapshotEnv>USER</snapshotEnv>
                            <verbose>true</verbose>
                            <controlDir>${basedir}/src/deb/control</controlDir>
                            <dataSet>
                                <!-- Use file from assembly:single task -->
                                <data>
                                    <src>
                                        ${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar
                                    </src>
                                    <type>file</type>
                                    <dst>%{APPNAMELC}.jar</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/java</prefix>
                                        <user>loader</user>
                                        <group>loader</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <!-- Include command line launch script -->
                                <data>
                                    <src>${project.basedir}/src/deb/install/%{APPNAMELC}</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/bin</prefix>
                                        <user>loader</user>
                                        <group>loader</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <!-- Include .desktop file for graphical launch -->
                                <data>
                                    <src>${project.basedir}/src/deb/install/%{APPNAMELC}.desktop</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/applications</prefix>
                                        <user>loader</user>
                                        <group>loader</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
